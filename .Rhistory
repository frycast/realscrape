c("Heidelberg+Heights" ,  "3081"),
c("Heidelberg+West"    ,  "3081"),
c("Ivanhoe"            ,  "3079"),
c("Ivanhoe+East"       ,  "3079"),
c("Lower+Plenty"       ,  "3093"),
c("Macleod"            ,  "3085"),
c("Montmorency"        ,  "3094"),
c("Rosanna"            ,  "3084"),
c("St+Helena"          ,  "3088"),
c("Viewbank"           ,  "3084"),
c("Watsonia"           ,  "3087"),
c("Watsonia+North"     ,  "3087"),
c("Yallambie"          ,  "3085")),
DAREBIN = list(
c("Alphington"         ,  "3078"),
c("Bundoora"           ,  "3083"),
c("Fairfield"          ,  "3078"),
c("Kingsbury"          ,  "3083"),
c("Macleod"            ,  "3085"),
c("Northcote"          ,  "3070"),
c("Preston"            ,  "3072"),
c("Reservoir"          ,  "3073"),
c("Thornbury"          ,  "3071"))
)
STA3LM_suburbs_by_council <- list(
MAROONDAH = list(
c("Bayswater+North",      "3153"),
c("Croydon"        ,      "3136"),
c("Croydon+Hills"  ,      "3136"),
c("Croydon+North"  ,      "3136"),
c("Croydon+South"  ,      "3136"),
c("Heathmont"      ,      "3135"),
c("Kilsyth+South"  ,      "3137"),
c("Ringwood"       ,      "3134"),
c("Ringwood+East"  ,      "3135"),
c("Ringwood+North" ,      "3134"),
c("Warranwood"     ,      "3134")),
KNOX = list(
c("Bayswater"           , "3153"),
c("Boronia"             , "3155"),
c("Ferntree+Gully"      , "3156"),
c("Knoxfield"           , "3180"),
c("Lysterfield"         , "3156"),
c("Rowville"            , "3178"),
c("Scoresby"            , "3179"),
c("The+Basin"           , "3154"),
c("Upper+Ferntree+Gully", "3156"),
c("Wantirna"            , "3152"),
c("Wantirna+South"      , "3152")),
WHITEHORSE = list(
c("Blackburn"      ,      "3130"),
c("Blackburn+North",      "3130"),
c("Blackburn+South",      "3130"),
c("Box+Hill"       ,      "3128"),
c("Box+Hill+North" ,      "3129"),
c("Box+Hill+South" ,      "3128"),
c("Burwood"        ,      "3125"),
c("Burwood+East"   ,      "3151"),
c("Forest+Hill"    ,      "3131"),
c("Mitcham"        ,      "3132"),
c("Mont+Albert"    ,      "3127"),
c("Nunawading"     ,      "3131"),
c("Surrey+Hills"   ,      "3127"),
c("Vermont"        ,      "3133"),
c("Vermont+South"  ,      "3133")),
BOROONDARA = list(
c("Ashburton"        ,    "3147"),
c("Balwyn"           ,    "3103"),
c("Balwyn+North"     ,    "3104"),
c("Camberwell"       ,    "3124"),
c("Canterbury"       ,    "3126"),
c("Deepdene"         ,    "3103"),
c("Glen+Iris"        ,    "3146"),
c("Hawthorn"         ,    "3122"),
c("Hawthorn+East"    ,    "3123"),
c("Kew"              ,    "3101"),
c("Kew+East"         ,    "3102"),
c("Mont+Albert"      ,    "3127"),
c("Mont+Albert+North",    "3127"),
c("Surrey+Hills"     ,    "3127")),
BANYULE = list(
c("Bellfield"          ,  "3081"),
c("Briar+Hill"         ,  "3088"),
c("Bundoora"           ,  "3083"),
c("Eaglemont"          ,  "3084"),
c("Eltham"             ,  "3095"),
c("Eltham+North"       ,  "3095"),
c("Greensborough"      ,  "3088"),
c("Heidelberg"         ,  "3084"),
c("Heidelberg+Heights" ,  "3081"),
c("Heidelberg+West"    ,  "3081"),
c("Ivanhoe"            ,  "3079"),
c("Ivanhoe+East"       ,  "3079"),
c("Lower+Plenty"       ,  "3093"),
c("Macleod"            ,  "3085"),
c("Montmorency"        ,  "3094"),
c("Rosanna"            ,  "3084"),
c("St+Helena"          ,  "3088"),
c("Viewbank"           ,  "3084"),
c("Watsonia"           ,  "3087"),
c("Watsonia+North"     ,  "3087"),
c("Yallambie"          ,  "3085")),
DAREBIN = list(
c("Alphington"         ,  "3078"),
c("Bundoora"           ,  "3083"),
c("Fairfield"          ,  "3078"),
c("Kingsbury"          ,  "3083"),
c("Macleod"            ,  "3085"),
c("Northcote"          ,  "3070"),
c("Preston"            ,  "3072"),
c("Reservoir"          ,  "3073"),
c("Thornbury"          ,  "3071"))
)
usethis::use_data(STA3LM_suburbs_by_council)
rm(list=ls())
STA3LM_suburbs_by_council
library(realscrape)
STA3LM_suburbs_by_council
data <- data.frame()
for ( council in names( STA3LM_suburbs_by_council )  ) {
for ( suburb in suburbs_by_council[[ council ]] ) {
data <- suburb %>%
scrape_suburb() %>%
rbind(data)
}
}
sbc <- STA3LM_suburbs_by_council
data <- data.frame()
sbc <- STA3LM_suburbs_by_council
for ( council in names( sbc )  ) {
for ( suburb in sbc[[ council ]] ) {
data <- suburb %>%
scrape_suburb() %>%
rbind(data)
}
}
data
length(sbc)
lapply(sbc, length)
sum(unlist(lapply(sbc, length)))
library(realscrape)
sbc <- STA3LM_suburbs_by_council
data <- scrape_sbc( sbc )
scrape_sbc <- function( sbc ) {
data <- data.frame()
for ( council in names( sbc )  ) {
for ( suburb in sbc[[ council ]] ) {
data <- suburb %>%
scrape_suburb() %>%
rbind(data)
data$suburb <- suburb[1]
data$postcode <- suburb[2]
}
data$council <- council
}
}
data <- scrape_sbc( sbc )
sbc <- STA3LM_suburbs_by_council
data <- scrape_sbc( sbc )
scrape_sbc <- function( sbc ) {
data <- data.frame()
for ( council in names( sbc )  ) {
for ( suburb in sbc[[ council ]] ) {
sub_data          <- scrape_suburb(suburb)
sub_data$suburb   <- suburb[1]
sub_data$postcode <- suburb[2]
sub_data$council  <- council
data <- rbind(data, sub_data)
}
}
}
data <- scrape_sbc( sbc )
data
scrape_sbc <- function( sbc ) {
data <- data.frame()
for ( council in names( sbc )  ) {
for ( suburb in sbc[[ council ]] ) {
sub_data          <- scrape_suburb(suburb)
sub_data$suburb   <- suburb[1]
sub_data$postcode <- suburb[2]
sub_data$council  <- council
data <- rbind(data, sub_data)
}
}
return(data)
}
data <- scrape_sbc( sbc )
data
library(realscrape)
library(realscrape)
data <- scrape_sbc( STA3LM_suburbs_by_council )
library(realscrape)
?scrape_sbc
data
data %>% drop_na()
data <- tidyr::drop_na( data )
data_clean <- tidyr::drop_na( data )
nrow(data); nrow(data_clean)
getAnywhere(scrape_sbc)
assertthat::assert_that( P >= 1 )
library(realscrape)
data <- scrape_sbc( STA3LM_suburbs_by_council, P = -1 )
library(realscrape)
data <- scrape_sbc( STA3LM_suburbs_by_council, P = -1 )
library(realscrape)
data <- scrape_sbc( STA3LM_suburbs_by_council, P = -1 )
library(realscrape)
data <- scrape_sbc( STA3LM_suburbs_by_council, P = -1 )
library(realscrape)
data <- scrape_sbc( STA3LM_suburbs_by_council, P = -1 )
data <- scrape_sbc( STA3LM_suburbs_by_council, P = 13 )
data <- scrape_sbc( STA3LM_suburbs_by_council, P = 1 )
data <- scrape_sbc( STA3LM_suburbs_by_council, P = 1 )
STA3LM_suburbs_by_council[[1]][[1]]
STA3LM_suburbs_by_council[[1]][[1]][1]
STA3LM_suburbs_by_council[[1]][[1]][2]
library(realscrape)
data <- scrape_sbc( STA3LM_suburbs_by_council, P = 1 )
library(realscrape)
data <- scrape_sbc( STA3LM_suburbs_by_council, P = 1 )
library(realscrape)
data <- scrape_sbc( STA3LM_suburbs_by_council, P = 1 )
source('D:/GDrive/YSync/Work/STA3LM_2019/realscrape/R/realscrape.R', echo=TRUE)
library(realscrape)
rm(list=ls())
library(realscrape)
data <- scrape_sbc( STA3LM_suburbs_by_council, P = 1 )
scrape_suburb( suburb = "Bayswater+North", postcode = "3153", P = 1 )
suburb = "Bayswater+North"; postcode = "3153"
P = 1
B = 1
board_urls <- paste0("https://www.auhouseprices.com/sold/list/VIC/",
suburb, "/", postcode, "/", 1:B, "/")
data <- data.frame()
ls <- list(
address  = vector(mode = "character" , length = P),
price    = vector(mode = "integer"   , length = P),
type     = vector(mode = "character" , length = P),
bed      = vector(mode = "integer"   , length = P),
bath     = vector(mode = "integer"   , length = P),
car      = vector(mode = "integer"   , length = P),
CBD      = vector(mode = "numeric"   , length = P),
date     = rep(as.Date("01/01/01")   , times  = P),
agency   = vector(mode = "character" , length = P),
images   = vector(mode = "integer"   , length = P),
land     = vector(mode = "integer"   , length = P),
med_h    = vector(mode = "integer"   , length = P),
med_u    = vector(mode = "integer"   , length = P),
school   = vector(mode = "numeric"   , length = P),
station  = vector(mode = "numeric"   , length = P)
)
data
ls
for ( i in 1:B ) {
page_urls <- board_urls[i] %>%
read_html() %>%
get_page_urls(P)
for ( j in 1:P ) {
page     <- read_html(page_urls[j])
stations <- get_stations(page)
schools  <- get_schools(page)
medians  <- get_medians(page)
ls$address[j] <- get_address(page, suburb)
ls$price[j]   <- get_price(page)
ls$type[j]    <- get_type(page)
ls$bed[j]     <- get_bed(page)
ls$bath[j]    <- get_bath(page)
ls$car[j]     <- get_car(page)
ls$CBD[j]     <- get_CBD(page)
ls$date[j]    <- get_date(page)
ls$agency[j]  <- get_agency(page)
ls$images[j]  <- get_images(page)
ls$land[j]    <- get_land(page)
ls$med_h[j]   <- medians[1]
ls$med_u[j]   <- medians[2]
ls$school[j]  <- schools[1]
ls$station[j] <- stations[1]
}
this_data <- data.frame(ls, stringsAsFactors = F)
data <- rbind(data, this_data)
}
# Extract all the urls for ad pages on this board
get_page_urls <- function(board, P) {
board %>%
html_nodes('a') %>%
html_attr('href') %>%
str_subset('https://www.auhouseprices.com/sold/view/VIC') %>%
unique() %>%
.[1:P]
}
# Helper function to get html text
quick_text <- function(page, tag) {
page %>%
html_nodes(tag) %>%
html_text()
}
# Address
get_address <- function(page, sub) {
sub <- gsub('\\+',' ',sub)
page %>%
quick_text('h2') %>%
.[1] %>%
gsub(paste0(', ', sub, '.+'),'',.)
}
# Sale price
get_price <- function(page) {
page %>%
quick_text('code') %>%
.[1] %>%
gsub("[$,]", '', .) %>%
as.integer()
}
# Type, bedrooms, bathroom, car
get_type_bed_bath_car <- function(page) {
page %>%
quick_text('li') %>%
.[34]  %>%
strsplit(split = " ") %>%
unlist() %>%
.[.!=""]
}
# Type
get_type <- function(page) {
page %>%
get_type_bed_bath_car() %>%
.[1]
}
# Bedrooms
get_bed <- function(page) {
page %>%
get_type_bed_bath_car() %>%
.[2] %>%
as.integer()
}
# Bathrooms
get_bath <- function(page) {
page %>%
get_type_bed_bath_car() %>%
.[3] %>%
as.integer()
}
# Carports
get_car <- function(page) {
car <- page %>%
get_type_bed_bath_car() %>%
.[4]
if ( is.na(car) ) {
car <- 0
} else { car <- as.integer(car) }
return(car)
}
# Distance to CBD
get_CBD <- function(page) {
page %>%
quick_text('code') %>%
str_subset('km') %>%
gsub('km', '', .) %>%
.[1] %>%
as.numeric()
}
# Sold date
get_date <- function(page) {
page %>%
quick_text('h5') %>%
.[1] %>%
substr(nchar(.)-11, nchar(.)-1) %>%
toupper() %>%
gsub('^\\s', '', .) %>%
gsub(' ', '-', .) %>%
as.Date(format = "%d-%b-%Y")
}
# Nearest stations
get_stations <- function(page) {
page %>%
quick_text('.pull-right') %>%
str_subset('km') %>%
gsub(' km', '', .) %>%
as.numeric()
}
# Nearest schools
get_schools <- function(page) {
page %>%
quick_text('.rounded-2x') %>%
str_subset('km') %>%
gsub(' km', '', .) %>%
as.numeric() %>%
.[!(. %in% get_stations(page))]
}
# Agency
get_agency <- function(page) {
page %>%
quick_text('.btn-link') %>%
.[1]
}
# Median house price of suburb &
# Median unit price of suburb
get_medians <- function(page) {
page %>%
quick_text('.down') %>%
gsub('[$,]','',.) %>%
as.integer()
}
# Number of images on advertisement
get_images <- function(page) {
page %>%
quick_text('div img') %>%
length() - 8 %>%
as.integer()
}
# Land size
get_land <- function(page) {
land <- page %>%
quick_text('li') %>%
str_subset('^Land Size:') %>%
gsub('Land Size: ', '', .) %>%
gsub(' m2','',.) %>%
as.integer()
if ( length(land) == 0 ) land <- -1
return(land)
}
for ( i in 1:B ) {
page_urls <- board_urls[i] %>%
read_html() %>%
get_page_urls(P)
for ( j in 1:P ) {
page     <- read_html(page_urls[j])
stations <- get_stations(page)
schools  <- get_schools(page)
medians  <- get_medians(page)
ls$address[j] <- get_address(page, suburb)
ls$price[j]   <- get_price(page)
ls$type[j]    <- get_type(page)
ls$bed[j]     <- get_bed(page)
ls$bath[j]    <- get_bath(page)
ls$car[j]     <- get_car(page)
ls$CBD[j]     <- get_CBD(page)
ls$date[j]    <- get_date(page)
ls$agency[j]  <- get_agency(page)
ls$images[j]  <- get_images(page)
ls$land[j]    <- get_land(page)
ls$med_h[j]   <- medians[1]
ls$med_u[j]   <- medians[2]
ls$school[j]  <- schools[1]
ls$station[j] <- stations[1]
}
this_data <- data.frame(ls, stringsAsFactors = F)
data <- rbind(data, this_data)
}
i <- 1
j <- 1
page_urls <- board_urls[i] %>%
read_html() %>%
get_page_urls(P)
page     <- read_html(page_urls[j])
page_urls[j]
board_urls[i]
board_urls[1]
page_urls <- board_urls[i] %>%
read_html()
page_urls
page_urls <- board_urls[i] %>%
read_html() %>%
get_page_urls(P)
page_urls
board <- board_urls[1]
board
board %>%
read_html() %>%
html_nodes('a') %>%
html_attr('href') %>%
str_subset('https://www.auhouseprices.com/sold/view/VIC') %>%
unique() %>%
.[1:P]
board %>%
read_html()
board %>%
read_html() %>%
html_nodes('a')
board %>%
read_html() %>%
html_nodes('a') %>%
html_attr('href')
board %>%
read_html() %>%
html_nodes('a') %>%
html_attr('href') %>%
str_subset('https://www.auhouseprices.com/sold/view/VIC')
board_urls
library(realscrape)
rm(list=ls())
data <- scrape_sbc( STA3LM_suburbs_by_council, P = 1 )
getAnywhere(scrape_sbc)
getAnywhere(scrape_suburb)
getAnywhere(get_price)
getAnywhere(get_page_urls)
getAnywhere(get_price)
getAnywhere(scrape_sbc)
getAnywhere(scrape_suburb)
getAnywhere(get_page_urls)
getAnywhere(quick_text)
data
STA3LM_suburbs_by_council
?scrape_sbc
data <- scrape_sbc( STA3LM_suburbs_by_council, P = 1 )
data
data$suburb
81*4427
system.time
?system.time
system.time({a <- 1})
library(realscrape)
?saveRDS
